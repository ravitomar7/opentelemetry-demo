# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0

# extra settings to be merged into OpenTelemetry Collector configuration
# do not delete this file

## Example configuration for sending data to your own OTLP HTTP backend
## Note: the spanmetrics exporter must be included in the exporters array
## if overriding the traces pipeline.
##
exporters:
   kafka:
     protocol_version: 3.4.0
     brokers: ["pkc-619z3.us-east1.gcp.confluent.cloud:9092"]
     auth:
       sasl: 
         mechanism: "PLAIN"
         username: "K35GAAUJWTBSFFZE"
         password: "CJnMeIsL+U7EO8ncGbVerP/v/smrOdYKK/A8RQcP2bmeGnazQ2DfSEl4QogsOpuO"
       tls:
        insecure: false
        insecure_skip_verify: true
# exporters:
#     kafka:
#       timeout: "5s"
#       protocol_version: 3.4.0 
#       topic: otlp_spans
#       encoding: otlp_proto
#       brokers: 
#         - pkc-619z3.us-east1.gcp.confluent.cloud:9092
#       client_id: "controller_broker_client"
#       auth:
#         sasl:
#           username: "K35GAAUJWTBSFFZE"
#           password: "CJnMeIsL+U7EO8ncGbVerP/v/smrOdYKK/A8RQcP2bmeGnazQ2DfSEl4QogsOpuO"
#           mechanism: "PLAIN"
#         tls:
#           insecure: false
#           insecure_skip_verify: true
#       metadata:
#         full: true
#         retry:
#           max: 1
#           backoff: "250ms"
#       retry_on_failure:
#         enabled: true
#         initial_interval: "1s"
#         max_interval: "3s"
#         max_elapsed_time: "30s"
#       sending_queue:
#         enabled: true
#         num_consumers: 20
#         queue_size: 5000000
#       producer:
#         max_message_bytes: 109657600
#         #flush_max_messages: 5
#         compression: gzip
#         required_acks: 1
#
#  service:
#    pipelines:
#      traces:
#        exporters: [spanmetrics, otlphttp/example]
 
